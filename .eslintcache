[{"C:\\WorkSpace\\tvmaze\\src\\App.js":"1","C:\\WorkSpace\\tvmaze\\src\\index.js":"2","C:\\WorkSpace\\tvmaze\\src\\pages\\Details.js":"3","C:\\WorkSpace\\tvmaze\\src\\pages\\Home.js":"4","C:\\WorkSpace\\tvmaze\\src\\pages\\NotFound.js":"5","C:\\WorkSpace\\tvmaze\\src\\pages\\HomeStyle.js":"6","C:\\WorkSpace\\tvmaze\\src\\components\\API.js":"7","C:\\WorkSpace\\tvmaze\\src\\components\\hearder.js":"8","C:\\WorkSpace\\tvmaze\\src\\components\\carousel.js":"9"},{"size":705,"mtime":1608890146134,"results":"10","hashOfConfig":"11"},{"size":219,"mtime":1608899897630,"results":"12","hashOfConfig":"11"},{"size":3173,"mtime":1608880893817,"results":"13","hashOfConfig":"11"},{"size":3690,"mtime":1608900210087,"results":"14","hashOfConfig":"11"},{"size":267,"mtime":1608745211870,"results":"15","hashOfConfig":"11"},{"size":2347,"mtime":1608897096293,"results":"16","hashOfConfig":"11"},{"size":276,"mtime":1608809430901,"results":"17","hashOfConfig":"11"},{"size":7316,"mtime":1608899150254,"results":"18","hashOfConfig":"11"},{"size":3398,"mtime":1608899468820,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fhpoqz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\WorkSpace\\tvmaze\\src\\App.js",[],["42","43"],"C:\\WorkSpace\\tvmaze\\src\\index.js",[],"C:\\WorkSpace\\tvmaze\\src\\pages\\Details.js",["44","45"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport fetchData from \"../components/API\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport HomeStyle from \"./HomeStyle\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => HomeStyle(theme, fade));\r\nconst Details = () => {\r\n  const { id } = useParams();\r\n  const classes = useStyles();\r\n  const [showDetails, setShowdetails] = useState(null);\r\n  useEffect(() => {\r\n    fetchData(`http://api.tvmaze.com/shows/${id}?embed=episodes`, (result) => {\r\n      setShowdetails(result);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {showDetails ? (\r\n        <div>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4}>\r\n              <img src={showDetails.image.medium} />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <Typography variant=\"h6\" noWrap>\r\n                {showDetails.name}\r\n              </Typography>\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `${showDetails.summary}`,\r\n                }}\r\n              />\r\n              <Typography variant=\"body2\">\r\n                Genres: {showDetails.genres.join(\",\")}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                Rating: {showDetails.rating.average}\r\n              </Typography>\r\n            </Grid>\r\n            {}\r\n          </Grid>\r\n\r\n          {showDetails._embedded.episodes.map((episode, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Paper className={classes.root}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={4}>\r\n                      <img src={episode.image.medium} />\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                      <p></p>\r\n                      <Typography variant=\"h6\">{episode.name}</Typography>\r\n                      <Typography variant=\"caption\" display=\"block\">\r\n                        {`Season: ${episode.season} Episode: ${episode.number}`}\r\n                      </Typography>\r\n                      <div\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: `${episode.summary}`,\r\n                        }}\r\n                      />\r\n                      <Typography variant=\"caption\" display=\"block\">\r\n                        Runtime: {episode.runtime}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n                <Divider />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Skeleton variant=\"text\" />\r\n          <Skeleton variant=\"circle\" width={40} height={40} />\r\n          <Skeleton variant=\"rect\" height={550} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\WorkSpace\\tvmaze\\src\\pages\\Home.js",["46","47"],"C:\\WorkSpace\\tvmaze\\src\\pages\\NotFound.js",[],"C:\\WorkSpace\\tvmaze\\src\\pages\\HomeStyle.js",[],"C:\\WorkSpace\\tvmaze\\src\\components\\API.js",[],"C:\\WorkSpace\\tvmaze\\src\\components\\hearder.js",["48","49"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport HomeStyle from \"../pages/HomeStyle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport useAutocomplete from \"@material-ui/lab/useAutocomplete\";\r\n\r\nconst useStyles = makeStyles((theme) => HomeStyle(theme, fade));\r\n\r\nconst Layout = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    getListboxProps,\r\n    getOptionProps,\r\n    groupedOptions,\r\n  } = useAutocomplete({\r\n    id: \"global-search\",\r\n    options: top100Films,\r\n    getOptionLabel: (option) => option.title,\r\n    onChange: (event, value) => {\r\n      console.log(\"this is called\", value);\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.AppBar}>\r\n        <Toolbar onClick={() => history.push(`/`)} data-testid=\"toolBar\">\r\n          {props.location.pathname !== \"/\" ? <ArrowBackIosIcon /> : null}\r\n\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            noWrap\r\n            data-testid=\"AppTitle\"\r\n            style={{ verticalAlign: \"center\" }}\r\n          >\r\n            SHOWS\r\n          </Typography>\r\n          <div className={classes.search} {...getRootProps()}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              {...getInputProps()}\r\n            />\r\n            {groupedOptions.length > 0 ? (\r\n              <ul className={classes.listbox} {...getListboxProps()}>\r\n                {groupedOptions.map((option, index) => (\r\n                  <li {...getOptionProps({ option, index })}>{option.title}</li>\r\n                ))}\r\n              </ul>\r\n            ) : null}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className=\"content\">{props.children}</div>\r\n    </>\r\n  );\r\n};\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: \"Pulp Fiction\", year: 1994 },\r\n  { title: \"The Lord of the Rings: The Return of the King\", year: 2003 },\r\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\r\n  { title: \"Fight Club\", year: 1999 },\r\n  { title: \"The Lord of the Rings: The Fellowship of the Ring\", year: 2001 },\r\n  { title: \"Star Wars: Episode V - The Empire Strikes Back\", year: 1980 },\r\n  { title: \"Forrest Gump\", year: 1994 },\r\n  { title: \"Inception\", year: 2010 },\r\n  { title: \"The Lord of the Rings: The Two Towers\", year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: \"Goodfellas\", year: 1990 },\r\n  { title: \"The Matrix\", year: 1999 },\r\n  { title: \"Seven Samurai\", year: 1954 },\r\n  { title: \"Star Wars: Episode IV - A New Hope\", year: 1977 },\r\n  { title: \"City of God\", year: 2002 },\r\n  { title: \"Se7en\", year: 1995 },\r\n  { title: \"The Silence of the Lambs\", year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: \"Life Is Beautiful\", year: 1997 },\r\n  { title: \"The Usual Suspects\", year: 1995 },\r\n  { title: \"LÃ©on: The Professional\", year: 1994 },\r\n  { title: \"Spirited Away\", year: 2001 },\r\n  { title: \"Saving Private Ryan\", year: 1998 },\r\n  { title: \"Once Upon a Time in the West\", year: 1968 },\r\n  { title: \"American History X\", year: 1998 },\r\n  { title: \"Interstellar\", year: 2014 },\r\n  { title: \"Casablanca\", year: 1942 },\r\n  { title: \"City Lights\", year: 1931 },\r\n  { title: \"Psycho\", year: 1960 },\r\n  { title: \"The Green Mile\", year: 1999 },\r\n  { title: \"The Intouchables\", year: 2011 },\r\n  { title: \"Modern Times\", year: 1936 },\r\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\r\n  { title: \"Rear Window\", year: 1954 },\r\n  { title: \"The Pianist\", year: 2002 },\r\n  { title: \"The Departed\", year: 2006 },\r\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\r\n  { title: \"Back to the Future\", year: 1985 },\r\n  { title: \"Whiplash\", year: 2014 },\r\n  { title: \"Gladiator\", year: 2000 },\r\n  { title: \"Memento\", year: 2000 },\r\n  { title: \"The Prestige\", year: 2006 },\r\n  { title: \"The Lion King\", year: 1994 },\r\n  { title: \"Apocalypse Now\", year: 1979 },\r\n  { title: \"Alien\", year: 1979 },\r\n  { title: \"Sunset Boulevard\", year: 1950 },\r\n  {\r\n    title:\r\n      \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\r\n    year: 1964,\r\n  },\r\n  { title: \"The Great Dictator\", year: 1940 },\r\n  { title: \"Cinema Paradiso\", year: 1988 },\r\n  { title: \"The Lives of Others\", year: 2006 },\r\n  { title: \"Grave of the Fireflies\", year: 1988 },\r\n  { title: \"Paths of Glory\", year: 1957 },\r\n  { title: \"Django Unchained\", year: 2012 },\r\n  { title: \"The Shining\", year: 1980 },\r\n  { title: \"WALLÂ·E\", year: 2008 },\r\n  { title: \"American Beauty\", year: 1999 },\r\n  { title: \"The Dark Knight Rises\", year: 2012 },\r\n  { title: \"Princess Mononoke\", year: 1997 },\r\n  { title: \"Aliens\", year: 1986 },\r\n  { title: \"Oldboy\", year: 2003 },\r\n  { title: \"Once Upon a Time in America\", year: 1984 },\r\n  { title: \"Witness for the Prosecution\", year: 1957 },\r\n  { title: \"Das Boot\", year: 1981 },\r\n  { title: \"Citizen Kane\", year: 1941 },\r\n  { title: \"North by Northwest\", year: 1959 },\r\n  { title: \"Vertigo\", year: 1958 },\r\n  { title: \"Star Wars: Episode VI - Return of the Jedi\", year: 1983 },\r\n  { title: \"Reservoir Dogs\", year: 1992 },\r\n  { title: \"Braveheart\", year: 1995 },\r\n  { title: \"M\", year: 1931 },\r\n  { title: \"Requiem for a Dream\", year: 2000 },\r\n  { title: \"AmÃ©lie\", year: 2001 },\r\n  { title: \"A Clockwork Orange\", year: 1971 },\r\n  { title: \"Like Stars on Earth\", year: 2007 },\r\n  { title: \"Taxi Driver\", year: 1976 },\r\n  { title: \"Lawrence of Arabia\", year: 1962 },\r\n  { title: \"Double Indemnity\", year: 1944 },\r\n  { title: \"Eternal Sunshine of the Spotless Mind\", year: 2004 },\r\n  { title: \"Amadeus\", year: 1984 },\r\n  { title: \"To Kill a Mockingbird\", year: 1962 },\r\n  { title: \"Toy Story 3\", year: 2010 },\r\n  { title: \"Logan\", year: 2017 },\r\n  { title: \"Full Metal Jacket\", year: 1987 },\r\n  { title: \"Dangal\", year: 2016 },\r\n  { title: \"The Sting\", year: 1973 },\r\n  { title: \"2001: A Space Odyssey\", year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: \"Toy Story\", year: 1995 },\r\n  { title: \"Bicycle Thieves\", year: 1948 },\r\n  { title: \"The Kid\", year: 1921 },\r\n  { title: \"Inglourious Basterds\", year: 2009 },\r\n  { title: \"Snatch\", year: 2000 },\r\n  { title: \"3 Idiots\", year: 2009 },\r\n  { title: \"Monty Python and the Holy Grail\", year: 1975 },\r\n];\r\nexport default withRouter(Layout);\r\n","C:\\WorkSpace\\tvmaze\\src\\components\\carousel.js",["50","51"],"import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nconst MultiElementCarousel = (props) => {\r\n  const { data, navigateTo } = props;\r\n  return (\r\n    <Carousel\r\n      data-testid=\"multiCarousel\"\r\n      additionalTransfrom={0}\r\n      arrows\r\n      autoPlaySpeed={3000}\r\n      centerMode={false}\r\n      className=\"\"\r\n      containerClass=\"container-with-dots\"\r\n      dotListClass=\"\"\r\n      draggable\r\n      focusOnSelect={false}\r\n      infinite\r\n      itemClass=\"\"\r\n      keyBoardControl\r\n      minimumTouchDrag={80}\r\n      renderButtonGroupOutside={false}\r\n      renderDotsOutside={false}\r\n      responsive={{\r\n        desktop: {\r\n          breakpoint: {\r\n            max: 3000,\r\n            min: 1024,\r\n          },\r\n          items: 6,\r\n          partialVisibilityGutter: 40,\r\n        },\r\n        mobile: {\r\n          breakpoint: {\r\n            max: 464,\r\n            min: 0,\r\n          },\r\n          items: 2,\r\n          partialVisibilityGutter: 30,\r\n        },\r\n        tablet: {\r\n          breakpoint: {\r\n            max: 1024,\r\n            min: 464,\r\n          },\r\n          items: 4,\r\n          partialVisibilityGutter: 30,\r\n        },\r\n      }}\r\n      showDots={false}\r\n      sliderClass=\"\"\r\n      slidesToSlide={1}\r\n      swipeable\r\n    >\r\n      {data.map((show, index) => {\r\n        return (\r\n          <div\r\n            onClick={() => navigateTo(show)}\r\n            key={index}\r\n            data-testid={`show-${show.id}`}\r\n          >\r\n            <img src={show.image.medium} style={{ marginBottom: \"5vh\" }} />\r\n          </div>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nconst FullWidthCarousel = (props) => {\r\n  const { data, navigateTo } = props;\r\n  return (\r\n    <Carousel\r\n      additionalTransfrom={0}\r\n      arrows\r\n      autoPlaySpeed={3000}\r\n      centerMode={false}\r\n      className=\"\"\r\n      containerClass=\"container\"\r\n      dotListClass=\"\"\r\n      draggable\r\n      focusOnSelect={false}\r\n      infinite\r\n      itemClass=\"\"\r\n      keyBoardControl\r\n      minimumTouchDrag={80}\r\n      renderButtonGroupOutside={false}\r\n      renderDotsOutside={false}\r\n      responsive={{\r\n        desktop: {\r\n          breakpoint: {\r\n            max: 3000,\r\n            min: 1024,\r\n          },\r\n          items: 1,\r\n        },\r\n        mobile: {\r\n          breakpoint: {\r\n            max: 464,\r\n            min: 0,\r\n          },\r\n          items: 1,\r\n        },\r\n        tablet: {\r\n          breakpoint: {\r\n            max: 1024,\r\n            min: 464,\r\n          },\r\n          items: 1,\r\n        },\r\n      }}\r\n      showDots\r\n      sliderClass=\"\"\r\n      slidesToSlide={1}\r\n      swipeable\r\n    >\r\n      {data\r\n        // .filter(\r\n        //   (thing, index, self) =>\r\n        //     index === self.findIndex((t) => t.id === thing.id)\r\n        // )\r\n        .map((show, index) => {\r\n          return (\r\n            <div\r\n              onClick={() => navigateTo(show.entries[0])}\r\n              style={{ marginBottom: \"5vh\" }}\r\n              key={index}\r\n            >\r\n              <img\r\n                src={show.entries[0].image.medium}\r\n                style={{\r\n                  display: \"block\",\r\n                  height: \"35vh\",\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n    </Carousel>\r\n  );\r\n};\r\nexport { FullWidthCarousel, MultiElementCarousel };\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":29,"column":15,"nodeType":"58","endLine":29,"endColumn":53},{"ruleId":"56","severity":1,"message":"57","line":56,"column":23,"nodeType":"58","endLine":56,"endColumn":57},{"ruleId":"59","severity":1,"message":"60","line":20,"column":10,"nodeType":"61","messageId":"62","endLine":20,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":36,"column":30,"nodeType":"65","messageId":"66","endLine":36,"endColumn":32},{"ruleId":"59","severity":1,"message":"67","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"68","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"57","line":62,"column":13,"nodeType":"58","endLine":62,"endColumn":76},{"ruleId":"56","severity":1,"message":"57","line":129,"column":15,"nodeType":"58","endLine":136,"endColumn":17},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'searchFieldData' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]