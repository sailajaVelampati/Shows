[{"C:\\WorkSpace\\tvmaze\\src\\App.js":"1","C:\\WorkSpace\\tvmaze\\src\\index.js":"2","C:\\WorkSpace\\tvmaze\\src\\reportWebVitals.js":"3","C:\\WorkSpace\\tvmaze\\src\\pages\\Details.js":"4","C:\\WorkSpace\\tvmaze\\src\\pages\\Home.js":"5","C:\\WorkSpace\\tvmaze\\src\\pages\\NotFound.js":"6","C:\\WorkSpace\\tvmaze\\src\\components\\carousel\\index.js":"7","C:\\WorkSpace\\tvmaze\\src\\pages\\HomeStyle.js":"8","C:\\WorkSpace\\tvmaze\\src\\pages\\dump.js":"9","C:\\WorkSpace\\tvmaze\\src\\components\\API.js":"10","C:\\WorkSpace\\tvmaze\\src\\components\\API.mock.js":"11","C:\\WorkSpace\\tvmaze\\src\\components\\hearder.js":"12"},{"size":1790,"mtime":1608809060574,"results":"13","hashOfConfig":"14"},{"size":500,"mtime":1608809454107,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608537689303,"results":"16","hashOfConfig":"14"},{"size":2758,"mtime":1608804117919,"results":"17","hashOfConfig":"14"},{"size":3760,"mtime":1608809445974,"results":"18","hashOfConfig":"14"},{"size":267,"mtime":1608745211870,"results":"19","hashOfConfig":"14"},{"size":3335,"mtime":1608804289782,"results":"20","hashOfConfig":"14"},{"size":1653,"mtime":1608749940816,"results":"21","hashOfConfig":"14"},{"size":5090,"mtime":1608570394633,"results":"22","hashOfConfig":"23"},{"size":276,"mtime":1608809430901,"results":"24","hashOfConfig":"14"},{"size":28087,"mtime":1608803956565,"results":"25","hashOfConfig":"14"},{"size":1322,"mtime":1608809337578,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fhpoqz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rfyfyk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\WorkSpace\\tvmaze\\src\\App.js",["55","56","57","58","59","60","61","62","63","64","65","66","67"],"C:\\WorkSpace\\tvmaze\\src\\index.js",[],"C:\\WorkSpace\\tvmaze\\src\\reportWebVitals.js",[],"C:\\WorkSpace\\tvmaze\\src\\pages\\Details.js",["68","69"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport fetchData from \"../components/API\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport HomeStyle from \"./HomeStyle\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nconst useStyles = makeStyles((theme) => HomeStyle(theme, fade));\r\nconst Details = () => {\r\n  const { id } = useParams();\r\n  const classes = useStyles();\r\n  const [showDetails, setShowdetails] = useState(null);\r\n  useEffect(() => {\r\n    fetchData(`http://api.tvmaze.com/shows/${id}?embed=episodes`, (result) => {\r\n      setShowdetails(result);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    showDetails && (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={4}>\r\n            <img src={showDetails.image.medium} />\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <Typography variant=\"h6\" noWrap>\r\n              {showDetails.name}\r\n            </Typography>\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: `${showDetails.summary}`,\r\n              }}\r\n            />\r\n            <Typography variant=\"body2\">\r\n              Genres: {showDetails.genres.join(\",\")}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Rating: {showDetails.rating.average}\r\n            </Typography>\r\n          </Grid>\r\n          {}\r\n        </Grid>\r\n\r\n        {showDetails._embedded.episodes.map((item, i) => {\r\n          return (\r\n            <div key={i}>\r\n              <Paper className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={4}>\r\n                    <img src={item.image.medium} />\r\n                  </Grid>\r\n                  <Grid item xs={7}>\r\n                    <p></p>\r\n                    <Typography variant=\"h6\">{item.name}</Typography>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                      {`Season: ${item.season} Episode: ${item.number}`}\r\n                    </Typography>\r\n                    <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: `${item.summary}`,\r\n                      }}\r\n                    />\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                      Runtime: {item.runtime}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n              <Divider />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Details;\r\n",["70","71"],"C:\\WorkSpace\\tvmaze\\src\\pages\\Home.js",["72","73","74","75"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HomeStyle from \"./HomeStyle\";\r\nimport fetchData from \"../components/API\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  MultiElementCarousel,\r\n  FullWidthCarousel,\r\n} from \"../components/carousel\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport fullListMock from \"../components/API.mock\";\r\nconst useStyles = makeStyles((theme) => HomeStyle(theme, fade));\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [shows, setShows] = useState(null);\r\n  const [searchFieldData, setSearchFieldData] = useState(null);\r\n  useEffect(() => {\r\n    fetchData(\"http://api.tvmaze.com/shows\", pageData);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const pageData = (result) => {\r\n    //result = fullListMock;\r\n    autoCompleteData(result);\r\n    result = groupByGener(result);\r\n    setShows(sortByRating(result));\r\n  };\r\n  const groupByGener = (result) => {\r\n    // grouping by genres\r\n    return result.reduce(function (r, a) {\r\n      a.genres.map((item) => {\r\n        r[item] = r[item] || [];\r\n        r[item].push(a);\r\n      });\r\n      return r;\r\n    }, {});\r\n  };\r\n\r\n  const sortByRating = (result) => {\r\n    //sort each gener by rating and modify data in a required format\r\n    const sortedShowsDataSet = [];\r\n    for (const [key, value] of Object.entries(result)) {\r\n      value.sort(function (a, b) {\r\n        return b.rating.average - a.rating.average;\r\n      });\r\n      sortedShowsDataSet.push({ genre: key, entries: value });\r\n    }\r\n    return sortedShowsDataSet;\r\n  };\r\n  const autoCompleteData = (data) => {\r\n    data = data.reduce((r, a) => {\r\n      r.push({ title: a.name, id: a.id });\r\n      return r;\r\n    }, []);\r\n    setSearchFieldData(data);\r\n  };\r\n  const navigateTo = (data) => {\r\n    history.push(`/details/${data.id}`);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.SearchBar}>\r\n        <Toolbar>\r\n          <Autocomplete\r\n            style={{ color: \"#F8F9F9\" }}\r\n            fullWidth={true}\r\n            disableClearable\r\n            options={searchFieldData || []}\r\n            getOptionLabel={(option) => option.title}\r\n            onChange={(event, newValue) => {\r\n              navigateTo(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                style={{ color: \"#F8F9F9\" }}\r\n                {...params}\r\n                label=\"Search by Shows name\"\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      {shows && (\r\n        <div>\r\n          <FullWidthCarousel\r\n            data-testid=\"fullCarousel\"\r\n            type=\"full\"\r\n            autoPlay={true}\r\n            data={shows}\r\n            navigateTo={navigateTo}\r\n            className={classes.FullWidthCarousel}\r\n          />\r\n        </div>\r\n      )}\r\n      {shows &&\r\n        shows.map((item, i) => {\r\n          return (\r\n            <div key={i}>\r\n              <Typography variant=\"subtitle1\">{item.genre} Features</Typography>\r\n              <MultiElementCarousel\r\n                data={item.entries}\r\n                navigateTo={navigateTo}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n","C:\\WorkSpace\\tvmaze\\src\\pages\\NotFound.js",[],"C:\\WorkSpace\\tvmaze\\src\\components\\carousel\\index.js",["76","77"],"import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nconst MultiElementCarousel = (props) => {\r\n  const { data, navigateTo } = props;\r\n  return (\r\n    <Carousel\r\n      additionalTransfrom={0}\r\n      arrows\r\n      autoPlaySpeed={3000}\r\n      centerMode={false}\r\n      className=\"\"\r\n      containerClass=\"container-with-dots\"\r\n      dotListClass=\"\"\r\n      draggable\r\n      focusOnSelect={false}\r\n      infinite\r\n      itemClass=\"\"\r\n      keyBoardControl\r\n      minimumTouchDrag={80}\r\n      renderButtonGroupOutside={false}\r\n      renderDotsOutside={false}\r\n      responsive={{\r\n        desktop: {\r\n          breakpoint: {\r\n            max: 3000,\r\n            min: 1024,\r\n          },\r\n          items: 6,\r\n          partialVisibilityGutter: 40,\r\n        },\r\n        mobile: {\r\n          breakpoint: {\r\n            max: 464,\r\n            min: 0,\r\n          },\r\n          items: 2,\r\n          partialVisibilityGutter: 30,\r\n        },\r\n        tablet: {\r\n          breakpoint: {\r\n            max: 1024,\r\n            min: 464,\r\n          },\r\n          items: 4,\r\n          partialVisibilityGutter: 30,\r\n        },\r\n      }}\r\n      showDots={false}\r\n      sliderClass=\"\"\r\n      slidesToSlide={1}\r\n      swipeable\r\n    >\r\n      {data.map((item, i) => {\r\n        return (\r\n          <div\r\n            onClick={() => navigateTo(item)}\r\n            key={i}\r\n            data-testid={`show-${item.id}`}\r\n          >\r\n            <img src={item.image.medium} style={{ marginBottom: \"5vh\" }} />\r\n          </div>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nconst FullWidthCarousel = (props) => {\r\n  const { data, navigateTo } = props;\r\n  return (\r\n    <Carousel\r\n      additionalTransfrom={0}\r\n      arrows\r\n      autoPlaySpeed={3000}\r\n      centerMode={false}\r\n      className=\"\"\r\n      containerClass=\"container\"\r\n      dotListClass=\"\"\r\n      draggable\r\n      focusOnSelect={false}\r\n      infinite\r\n      itemClass=\"\"\r\n      keyBoardControl\r\n      minimumTouchDrag={80}\r\n      renderButtonGroupOutside={false}\r\n      renderDotsOutside={false}\r\n      responsive={{\r\n        desktop: {\r\n          breakpoint: {\r\n            max: 3000,\r\n            min: 1024,\r\n          },\r\n          items: 1,\r\n        },\r\n        mobile: {\r\n          breakpoint: {\r\n            max: 464,\r\n            min: 0,\r\n          },\r\n          items: 1,\r\n        },\r\n        tablet: {\r\n          breakpoint: {\r\n            max: 1024,\r\n            min: 464,\r\n          },\r\n          items: 1,\r\n        },\r\n      }}\r\n      showDots\r\n      sliderClass=\"\"\r\n      slidesToSlide={1}\r\n      swipeable\r\n    >\r\n      {data\r\n        .filter(\r\n          (thing, index, self) =>\r\n            index === self.findIndex((t) => t.id === thing.id)\r\n        )\r\n        .map((item, i) => {\r\n          return (\r\n            <div\r\n              onClick={() => navigateTo(item.entries[0])}\r\n              style={{ marginBottom: \"5vh\" }}\r\n              key={i}\r\n            >\r\n              <img\r\n                src={item.entries[0].image.medium}\r\n                style={{\r\n                  display: \"block\",\r\n                  height: \"35vh\",\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n    </Carousel>\r\n  );\r\n};\r\nexport { FullWidthCarousel, MultiElementCarousel };\r\n","C:\\WorkSpace\\tvmaze\\src\\pages\\HomeStyle.js",[],"C:\\WorkSpace\\tvmaze\\src\\pages\\dump.js",[],"C:\\WorkSpace\\tvmaze\\src\\components\\API.js",[],"C:\\WorkSpace\\tvmaze\\src\\components\\API.mock.js",[],"C:\\WorkSpace\\tvmaze\\src\\components\\hearder.js",["78","79","80","81","82","83","84","85","86","87"],{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"93","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"94","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":15},{"ruleId":"88","severity":1,"message":"95","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":18},{"ruleId":"88","severity":1,"message":"96","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":17},{"ruleId":"88","severity":1,"message":"97","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":18},{"ruleId":"88","severity":1,"message":"98","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":17},{"ruleId":"88","severity":1,"message":"99","line":11,"column":8,"nodeType":"90","messageId":"91","endLine":11,"endColumn":17},{"ruleId":"88","severity":1,"message":"100","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":20},{"ruleId":"88","severity":1,"message":"101","line":14,"column":50,"nodeType":"90","messageId":"91","endLine":14,"endColumn":54},{"ruleId":"88","severity":1,"message":"102","line":22,"column":9,"nodeType":"90","messageId":"91","endLine":22,"endColumn":16},{"ruleId":"88","severity":1,"message":"103","line":23,"column":9,"nodeType":"90","messageId":"91","endLine":23,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":26,"column":13,"nodeType":"106","endLine":26,"endColumn":51},{"ruleId":"104","severity":1,"message":"105","line":53,"column":21,"nodeType":"106","endLine":53,"endColumn":52},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"88","severity":1,"message":"96","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":17},{"ruleId":"88","severity":1,"message":"97","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":18},{"ruleId":"88","severity":1,"message":"111","line":17,"column":8,"nodeType":"90","messageId":"91","endLine":17,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":39,"column":27,"nodeType":"114","messageId":"115","endLine":39,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":61,"column":13,"nodeType":"106","endLine":61,"endColumn":76},{"ruleId":"104","severity":1,"message":"105","line":128,"column":15,"nodeType":"106","endLine":135,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"96","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":17},{"ruleId":"88","severity":1,"message":"97","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":18},{"ruleId":"88","severity":1,"message":"99","line":10,"column":8,"nodeType":"90","messageId":"91","endLine":10,"endColumn":17},{"ruleId":"88","severity":1,"message":"100","line":11,"column":8,"nodeType":"90","messageId":"91","endLine":11,"endColumn":20},{"ruleId":"88","severity":1,"message":"116","line":12,"column":27,"nodeType":"90","messageId":"91","endLine":12,"endColumn":33},{"ruleId":"88","severity":1,"message":"117","line":12,"column":35,"nodeType":"90","messageId":"91","endLine":12,"endColumn":41},{"ruleId":"88","severity":1,"message":"118","line":12,"column":43,"nodeType":"90","messageId":"91","endLine":12,"endColumn":48},{"ruleId":"88","severity":1,"message":"101","line":12,"column":50,"nodeType":"90","messageId":"91","endLine":12,"endColumn":54},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'fetchData' is defined but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'Link' is defined but never used.","'classes' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'fullListMock' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]