[{"C:\\WorkSpace\\tvmaze\\src\\App.js":"1","C:\\WorkSpace\\tvmaze\\src\\index.js":"2","C:\\WorkSpace\\tvmaze\\src\\pages\\Details.js":"3","C:\\WorkSpace\\tvmaze\\src\\pages\\Home.js":"4","C:\\WorkSpace\\tvmaze\\src\\pages\\NotFound.js":"5","C:\\WorkSpace\\tvmaze\\src\\pages\\HomeStyle.js":"6","C:\\WorkSpace\\tvmaze\\src\\components\\API.js":"7","C:\\WorkSpace\\tvmaze\\src\\components\\carousel.js":"8","C:\\WorkSpace\\tvmaze\\src\\components\\showCard.js":"9","C:\\WorkSpace\\tvmaze\\src\\components\\layout.js":"10","C:\\WorkSpace\\tvmaze\\src\\pages\\searchList.js":"11"},{"size":2971,"mtime":1609052034030,"results":"12","hashOfConfig":"13"},{"size":322,"mtime":1608922990298,"results":"14","hashOfConfig":"13"},{"size":3257,"mtime":1609069160228,"results":"15","hashOfConfig":"13"},{"size":2426,"mtime":1609069185657,"results":"16","hashOfConfig":"13"},{"size":267,"mtime":1608745211870,"results":"17","hashOfConfig":"13"},{"size":2347,"mtime":1608900975816,"results":"18","hashOfConfig":"13"},{"size":276,"mtime":1608809430901,"results":"19","hashOfConfig":"13"},{"size":3074,"mtime":1608919116812,"results":"20","hashOfConfig":"13"},{"size":2572,"mtime":1609044568010,"results":"21","hashOfConfig":"13"},{"size":2879,"mtime":1609052620423,"results":"22","hashOfConfig":"13"},{"size":2271,"mtime":1609069198882,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1fhpoqz",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\WorkSpace\\tvmaze\\src\\App.js",["52","53","54"],"import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory, withRouter } from \"react-router-dom\";\nimport Layout from \"./components/layout\";\nimport Home from \"./pages/Home\";\nimport Details from \"./pages/Details\";\nimport Notfound from \"./pages/NotFound\";\nimport fetchData from \"./components/API\";\nimport SearchShowsList from \"./pages/searchList\";\nimport { CodeSharp } from \"@material-ui/icons\";\n\nfunction App() {\n  const history = useHistory();\n  const [shows, setShows] = useState(null);\n  const [searchFieldData, setSearchFieldData] = useState(null);\n  const [querySearchList, setQuerySearchList] = useState(null);\n  useEffect(() => {\n    fetchData(\"http://api.tvmaze.com/shows\", pageData);\n    // eslint-disable-next-line\n  }, []);\n  const pageData = (result) => {\n    if (result) {\n      autoCompleteData(result);\n      result = groupByGener(result);\n      setShows(sortByRating(result));\n    }\n  };\n  const groupByGener = (result) => {\n    // grouping by genres\n    return result.reduce(function (showList, show) {\n      show.genres.map((item) => {\n        showList[item] = showList[item] || [];\n        showList[item].push(show);\n      });\n      return showList;\n    }, {});\n  };\n\n  const sortByRating = (result) => {\n    //sort each gener by rating and modify data in a required format\n    const sortedShowsDataSet = [];\n    for (const [key, value] of Object.entries(result)) {\n      value.sort(function (previousElement, nextElement) {\n        return nextElement.rating.average - previousElement.rating.average;\n      });\n      sortedShowsDataSet.push({ genre: key, entries: value });\n    }\n    return sortedShowsDataSet;\n  };\n  const autoCompleteData = (data) => {\n    data = data.reduce((showList, show) => {\n      showList.push({ title: show.name, id: show.id });\n      return showList;\n    }, []);\n    setSearchFieldData(data);\n  };\n  const querySearch = (text) => {\n    console.log(\"query search function called with \", text);\n    fetchData(`http://api.tvmaze.com/search/shows?q=${text}`, (result) => {\n      setQuerySearchList(result);\n    });\n  };\n  const navigateTo = (id) => {\n    history.push(`/details/${id}`);\n  };\n  useEffect(() => {\n    if (querySearchList) {\n      console.log(\"quesrlist updated\");\n      history.push(\"/showList\");\n    }\n  }, [querySearchList]);\n  return (\n    <div className=\"App\">\n      <Layout\n        history={history}\n        searchFieldData={searchFieldData}\n        querySearch={querySearch}\n        navigateTo={navigateTo}\n      >\n        <Switch>\n          <Route exact path=\"/\">\n            <Home shows={shows} />\n          </Route>\n          <Route path=\"/details/:id(\\d+)\">\n            <Details />\n          </Route>\n          <Route path=\"/showList\">\n            <SearchShowsList searchShowsList={querySearchList} />\n          </Route>\n          <Route path=\"*\">\n            <Notfound />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n",["55","56"],"C:\\WorkSpace\\tvmaze\\src\\index.js",["57","58"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","C:\\WorkSpace\\tvmaze\\src\\pages\\Details.js",["59","60","61"],"C:\\WorkSpace\\tvmaze\\src\\pages\\Home.js",["62","63","64"],"C:\\WorkSpace\\tvmaze\\src\\pages\\NotFound.js",[],"C:\\WorkSpace\\tvmaze\\src\\pages\\HomeStyle.js",[],"C:\\WorkSpace\\tvmaze\\src\\components\\API.js",[],"C:\\WorkSpace\\tvmaze\\src\\components\\carousel.js",["65"],"import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport ShowCard from \"./showCard\";\r\n\r\nconst MultiElementCarousel = (props) => {\r\n  const { data, navigateTo } = props;\r\n  return (\r\n    <Carousel\r\n      data-testid=\"multiCarousel\"\r\n      additionalTransfrom={0}\r\n      arrows\r\n      autoPlaySpeed={3000}\r\n      centerMode={false}\r\n      className=\"\"\r\n      containerClass=\"container-with-dots\"\r\n      dotListClass=\"\"\r\n      draggable\r\n      focusOnSelect={false}\r\n      infinite\r\n      itemClass=\"\"\r\n      keyBoardControl\r\n      minimumTouchDrag={80}\r\n      renderButtonGroupOutside={false}\r\n      renderDotsOutside={false}\r\n      responsive={{\r\n        desktop: {\r\n          breakpoint: {\r\n            max: 3000,\r\n            min: 1024,\r\n          },\r\n          items: 6,\r\n          partialVisibilityGutter: 40,\r\n        },\r\n        mobile: {\r\n          breakpoint: {\r\n            max: 464,\r\n            min: 0,\r\n          },\r\n          items: 2,\r\n          partialVisibilityGutter: 30,\r\n        },\r\n        tablet: {\r\n          breakpoint: {\r\n            max: 1024,\r\n            min: 464,\r\n          },\r\n          items: 4,\r\n          partialVisibilityGutter: 30,\r\n        },\r\n      }}\r\n      showDots={false}\r\n      sliderClass=\"\"\r\n      slidesToSlide={1}\r\n      swipeable\r\n    >\r\n      {data.map((show, index) => {\r\n        return (\r\n          <div\r\n            onClick={() => navigateTo(show)}\r\n            key={index}\r\n            data-testid={`show-${show.id}`}\r\n          >\r\n            <img src={show.image.medium} />\r\n          </div>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nconst FullWidthCarousel = (props) => {\r\n  const { data, navigateTo } = props;\r\n  return (\r\n    <Carousel\r\n      additionalTransfrom={0}\r\n      arrows\r\n      autoPlaySpeed={3000}\r\n      centerMode={false}\r\n      className=\"\"\r\n      containerClass=\"container\"\r\n      dotListClass=\"\"\r\n      focusOnSelect={false}\r\n      infinite\r\n      itemClass=\"\"\r\n      keyBoardControl\r\n      renderButtonGroupOutside={false}\r\n      renderDotsOutside={false}\r\n      responsive={{\r\n        desktop: {\r\n          breakpoint: {\r\n            max: 3000,\r\n            min: 1024,\r\n          },\r\n          items: 1,\r\n        },\r\n        mobile: {\r\n          breakpoint: {\r\n            max: 464,\r\n            min: 0,\r\n          },\r\n          items: 1,\r\n        },\r\n        tablet: {\r\n          breakpoint: {\r\n            max: 1024,\r\n            min: 464,\r\n          },\r\n          items: 1,\r\n        },\r\n      }}\r\n      showDots\r\n      sliderClass=\"\"\r\n      slidesToSlide={1}\r\n      swipeable\r\n    >\r\n      {data\r\n        // .filter(\r\n        //   (thing, index, self) =>\r\n        //     index === self.findIndex((t) => t.id === thing.id)\r\n        // )\r\n        .map((show, index) => {\r\n          return (\r\n            <div onClick={() => navigateTo(show.entries[0])} key={index}>\r\n              <ShowCard data={show.entries[0]} />\r\n            </div>\r\n          );\r\n        })}\r\n    </Carousel>\r\n  );\r\n};\r\nexport { FullWidthCarousel, MultiElementCarousel };\r\n","C:\\WorkSpace\\tvmaze\\src\\components\\showCard.js",["66","67","68","69","70","71","72"],"import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    background: \"linear-gradient(to right bottom, #7BA6CE, #545F69)\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n    padding: \"0px 20px\",\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\nexport default function ShowCard(props) {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <Grid container spacing={0}>\r\n          <Grid item sm={2}>\r\n            <img\r\n              src={data.image.medium}\r\n              style={{\r\n                display: \"block\",\r\n                height: \"100%\",\r\n                weight: \"100%\",\r\n              }}\r\n              alt={data.name}\r\n            />\r\n          </Grid>\r\n          <Grid item sm={10}>\r\n            <CardContent className={classes.content}>\r\n              <Typography component=\"h5\" variant=\"h5\">\r\n                {data.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {data.rating.average}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body1\"\r\n                color=\"textSecondary\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `${data.summary}`,\r\n                }}\r\n              ></Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n        {/* <CardMedia\r\n          className={classes.cover}\r\n          src=\"http://static.tvmaze.com/uploads/images/medium_portrait/59/148162.jpg\"\r\n          title=\"Live from space album cover\"\r\n        /> */}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\WorkSpace\\tvmaze\\src\\components\\layout.js",["73","74","75","76"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport HomeStyle from \"../pages/HomeStyle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport useAutocomplete from \"@material-ui/lab/useAutocomplete\";\r\n\r\nconst useStyles = makeStyles((theme) => HomeStyle(theme, fade));\r\n\r\nconst Layout = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { searchFieldData, querySearch, navigateTo, history } = props;\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    getListboxProps,\r\n    getOptionProps,\r\n    groupedOptions,\r\n  } = useAutocomplete({\r\n    id: \"global-search\",\r\n    options: searchFieldData,\r\n    getOptionLabel: (option) => option.title,\r\n    onChange: (event, value) => {\r\n      console.log(value.id, history, event);\r\n      history.push(`/details/${value.id}`);\r\n      window.location.reload(false);\r\n      //navigateTo(value.id);\r\n    },\r\n    clearOnBlur: true,\r\n    onClose: (event, reason) => {\r\n      console.log(\"onClose\");\r\n      if (reason === \"blur\") {\r\n        querySearch(event.target.value);\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <AppBar className={classes.AppBar} position=\"fixed\">\r\n        <Toolbar data-testid=\"toolBar\">\r\n          {props.location.pathname !== \"/\" ? <ArrowBackIosIcon /> : null}\r\n          <Typography\r\n            onClick={() => history.push(`/`)}\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            noWrap\r\n            data-testid=\"AppTitle\"\r\n          >\r\n            SHOWS\r\n          </Typography>\r\n          <div className={classes.search} {...getRootProps()}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              {...getInputProps()}\r\n            />\r\n            {groupedOptions.length > 0 ? (\r\n              <ul className={classes.listbox} {...getListboxProps()}>\r\n                {groupedOptions.map((option, index) => (\r\n                  <li {...getOptionProps({ option, index })}>{option.title}</li>\r\n                ))}\r\n              </ul>\r\n            ) : null}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className=\"content\">{props.children}</div>\r\n    </>\r\n  );\r\n};\r\nexport default withRouter(Layout);\r\n","C:\\WorkSpace\\tvmaze\\src\\pages\\searchList.js",["77","78","79","80"],{"ruleId":"81","severity":1,"message":"82","line":9,"column":10,"nodeType":"83","messageId":"84","endLine":9,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":30,"column":30,"nodeType":"87","messageId":"88","endLine":30,"endColumn":32},{"ruleId":"89","severity":1,"message":"90","line":70,"column":6,"nodeType":"91","endLine":70,"endColumn":23,"suggestions":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"81","severity":1,"message":"97","line":5,"column":35,"nodeType":"83","messageId":"84","endLine":5,"endColumn":41},{"ruleId":"81","severity":1,"message":"98","line":5,"column":43,"nodeType":"83","messageId":"84","endLine":5,"endColumn":48},{"ruleId":"81","severity":1,"message":"99","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":30,"column":15,"nodeType":"102","endLine":30,"endColumn":53},{"ruleId":"100","severity":1,"message":"101","line":57,"column":23,"nodeType":"102","endLine":57,"endColumn":80},{"ruleId":"81","severity":1,"message":"103","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"104","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"105","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":63,"column":13,"nodeType":"102","endLine":63,"endColumn":44},{"ruleId":"81","severity":1,"message":"106","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":17},{"ruleId":"81","severity":1,"message":"107","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":18},{"ruleId":"81","severity":1,"message":"108","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":24},{"ruleId":"81","severity":1,"message":"109","line":9,"column":8,"nodeType":"83","messageId":"84","endLine":9,"endColumn":21},{"ruleId":"81","severity":1,"message":"110","line":10,"column":8,"nodeType":"83","messageId":"84","endLine":10,"endColumn":20},{"ruleId":"81","severity":1,"message":"111","line":11,"column":10,"nodeType":"83","messageId":"84","endLine":11,"endColumn":15},{"ruleId":"81","severity":1,"message":"112","line":43,"column":9,"nodeType":"83","messageId":"84","endLine":43,"endColumn":14},{"ruleId":"81","severity":1,"message":"103","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"104","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"113","line":7,"column":10,"nodeType":"83","messageId":"84","endLine":7,"endColumn":20},{"ruleId":"81","severity":1,"message":"114","line":19,"column":41,"nodeType":"83","messageId":"84","endLine":19,"endColumn":51},{"ruleId":"81","severity":1,"message":"103","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"104","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"105","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":27,"column":23,"nodeType":"102","endLine":31,"endColumn":25},"no-unused-vars","'CodeSharp' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"'Switch' is defined but never used.","'Route' is defined but never used.","'Divider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'fetchData' is defined but never used.","'CardMedia' is defined but never used.","'IconButton' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'SkipNextIcon' is defined but never used.","'Paper' is defined but never used.","'theme' is assigned a value but never used.","'useHistory' is defined but never used.","'navigateTo' is assigned a value but never used.",{"desc":"118","fix":"119"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [history, querySearchList]",{"range":"120","text":"121"},[2292,2309],"[history, querySearchList]"]